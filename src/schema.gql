# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Board {
  id: ID!
  createdAt: DateTime!
  updateAt: DateTime!
  deletedAt: DateTime
  title: String!
  createdBy: User!
  lists: [List!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type List {
  id: ID!
  createdAt: DateTime!
  updateAt: DateTime!
  deletedAt: DateTime
  title: String!
  board: Board!
  createdBy: User!
  cards: [Card!]!
}

type Card {
  id: ID!
  createdAt: DateTime!
  updateAt: DateTime!
  deletedAt: DateTime
  title: String!
  description: String
  dueDate: DateTime
  endDate: DateTime
  list: List!
  createdBy: User!
  members: [User!]
}

type User {
  id: ID!
  createdAt: DateTime!
  updateAt: DateTime!
  deletedAt: DateTime
  username: String!
  email: String!
  roles: [UserRoles!]!
  lastUpdatedBy: User
  cards: [Card!]
}

"""Valid roles for users"""
enum UserRoles {
  admin
  user
}

type Query {
  users(roles: [UserRoles!] = [], offset: Int = 0, limit: Int = 10, search: String): [User!]!
  user(id: ID!): User!
  boards(offset: Int = 0, limit: Int = 10, search: String): [Board!]!
  board(id: ID!): Board!
  lists(offset: Int = 0, limit: Int = 10, search: String): [List!]!
  list(id: ID!): List!
  cards(offset: Int = 0, limit: Int = 10, search: String): [Card!]!
  card(id: ID!): Card!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): User!
  createBoard(createBoardInput: CreateBoardInput!): Board!
  updateBoard(updateBoardInput: UpdateBoardInput!): Board!
  removeBoard(id: ID!): Board!
  createList(createListInput: CreateListInput!): List!
  updateList(updateListInput: UpdateListInput!): List!
  removeList(id: ID!): List!
  createCard(createCardInput: CreateCardInput!): Card!
  updateCard(updateCardInput: UpdateCardInput!): Card!
  removeCard(id: ID!): Card!
}

input CreateUserInput {
  """User username"""
  username: String!

  """User email"""
  email: String!

  """User password"""
  password: String!

  """Roles that the user can have"""
  roles: [UserRoles!] = [user]
}

input UpdateUserInput {
  """User username"""
  username: String

  """User email"""
  email: String

  """User password"""
  password: String
  roles: [UserRoles!] = [user]
  id: ID!
  deletedAt: DateTime
}

input CreateBoardInput {
  title: String!
}

input UpdateBoardInput {
  title: String
  id: ID!
}

input CreateListInput {
  title: String!
  boardId: ID!
}

input UpdateListInput {
  title: String
  boardId: ID
  id: ID!
}

input CreateCardInput {
  listId: ID!
  title: String!
  description: String
  dueDate: DateTime
  endDate: DateTime
  members: [String!]
}

input UpdateCardInput {
  listId: ID
  title: String
  description: String
  dueDate: DateTime
  endDate: DateTime
  id: ID!
}